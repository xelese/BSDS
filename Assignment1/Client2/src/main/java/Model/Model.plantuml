@startuml

title __MODEL's Class Diagram__\n

    namespace Model {
      class Model.Consumer {
          - apiInstance : TextbodyApi
          - body : TextLine
          - function : String
          - queue : BlockingQueue<String>
          + Consumer()
          + run()
      }
    }

    namespace Model {
      class Model.DataBuffer {
          # failCounter : AtomicInteger
          # loggingDataList : List<LoggingData>
          # producerComplete : AtomicInteger
          # queue : BlockingQueue<String>
          # successCounter : AtomicInteger
          # textLineCounter : AtomicInteger
          + DataBuffer()
          + getFailCounter()
          + getLoggingDataList()
          + getProducerComplete()
          + getQueue()
          + getSuccessCounter()
          + getTextLineCounter()
      }
    }

    namespace Model {
      class Model.LoggingData {
          - latency : Integer
          - requestType : String
          - responseCode : Integer
          - startTime : String
          + LoggingData()
          + compareTo()
          + getLatency()
          + getRequestType()
          + getResponseCode()
          + getStartTime()
      }
    }

    namespace Model {
      class Model.Producer {
          - debugLineCounter : Integer
          - scanner : Scanner
          + Producer()
          + getDebugLineCounter()
          + run()
      }
    }

  

  Model.Consumer .up.|> java.lang.Runnable
  Model.Consumer o-- Model.DataBuffer : dataBuffer
  Model.LoggingData .up.|> java.lang.Comparable
  Model.Producer .up.|> java.lang.Runnable
  Model.Producer o-- Model.DataBuffer : dataBuffer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
